# CS325_p3

CS325_p3 is a project consisting of modules for downloading web content, writing to files, and extracting comments from HTML files. It includes several Python scripts organized into modules to facilitate these tasks.

## Project Structure
The project has the following structure:

- **Data/**
  - **raw/**
    - This directory is used to store downloaded web content in text files.
  - **processed/**
    - This directory is used to store extracted comments in text files.

- **module_1/**
  - **web_downloader.py**
    - This module is responsible for downloading content from a URL and saving it to a text file in the 'Data/raw' directory.

- **module_2/**
  - **web_filewriter.py**
    - This module writes text content to a specified file in the 'Data/raw' directory.

- **module_3/**
  - **comment_extractor.py**
    - This module extracts comments from an HTML file and saves them to separate text files in the 'Data/processed' directory.

- **run.py**
  - The run script is used to initiate the downloading and comment extraction processes.

## Usage

To use this project, follow these steps:

1. Run `run.py` with a URL as an argument to download web content and extract comments. For example:

   ```sh
   python run.py https://example.com

## Dependencies
pip install beautifulsoup4


# CS325_project3

# CS325_project3 is a project consisting of modules for downloading web content, writing to files, and extracting comments from HTML files. It includes several Python scripts organized into modules to facilitate these tasks.

## Prerequisites
Before you can run the Web Downloader and Comments Extractor program, you need to ensure you have the following prerequisites installed on your system:

- Python 3
- Git (optional, but useful for cloning the repository)

## Getting Started

1. **Clone the repository.**

   If you have Git installed, you can clone the repository to your local machine using the following command:

   ```bash
   git clone https://github.com/yyman919/CS325_project3.git

2. **Navigate to the Project Directory**

3. **Create a Virtual Environment**

4. **Using Conda**
   
## Running the Program 
1. Step 1: Use the command line: py run.py (url)
then outputs in Data directory



